{"version":3,"sources":["Components/Header/Header.js","Components/Taskform/Taskform.js","Components/Tasks/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Taskform","addTask","Form","onSubmit","e","preventDefault","target","elements","taskName","taskDescription","id","shortid","generate","name","value","trim","description","reset","Group","Control","type","placeholder","required","as","rows","Button","variant","className","Tasks","tasks","deleteTask","Table","bordered","hover","map","task","onClick","style","cursor","color","fontSize","App","useState","setTasks","Container","Row","Col","size","md","console","log","selectedTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"meAOeA,EALA,WACb,OAAO,4C,+DC0CMC,EA1CE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAclB,OACE,eAACC,EAAA,EAAD,CAAMC,SAdc,SAACC,GACrBA,EAAEC,iBAEF,kBAAoCD,EAAEE,OAAOC,SAA7C,GAAOC,EAAP,KAAiBC,EAAjB,KACAR,EAAQ,CACNS,GAAIC,IAAQC,WACZC,KAAML,EAASM,MAAMC,OACrBC,YAAaP,EAAgBK,MAAMC,SAGrCX,EAAEE,OAAOW,SAIT,UACE,2CACA,cAACf,EAAA,EAAKgB,MAAN,UACE,cAAChB,EAAA,EAAKiB,QAAN,CACEC,KAAK,OACLP,KAAK,WACLQ,YAAY,4BACZC,SAAS,eAGb,eAACpB,EAAA,EAAKgB,MAAN,WACE,yDACA,cAAChB,EAAA,EAAKiB,QAAN,CACEI,GAAG,WACHV,KAAK,kBACLS,SAAS,WACTE,KAAM,EACNH,YAAY,kBAGhB,cAACI,EAAA,EAAD,CAAQL,KAAK,SAASM,QAAS,UAAWC,UAAW,gBAArD,0B,kBCCSC,EAnCD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAKtB,OACE,eAACC,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAArB,UACE,gCACE,+BACE,sCACA,kDAGJ,gCACGJ,EAAMK,KAAI,SAACC,GAAD,OACT,+BACE,6BAAKA,EAAKtB,OACV,6BAAKsB,EAAKnB,cACV,oBAAIoB,QAAS,kBAjBH1B,EAiBoByB,EAAKzB,QAhB3CoB,EAAWpB,GADM,IAACA,GAiBV,SACE,cAAC,IAAD,CACE2B,MAAO,CACLC,OAAQ,UACRC,MAAO,UACPC,SAAU,cARTL,EAAKzB,aCkBT+B,MA/Bf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOb,EAAP,KAAcc,EAAd,KAYA,OACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAKlB,UAAW,gCAAhB,SACE,cAACmB,EAAA,EAAD,CAAKC,KAAM,EAAGC,GAAI,EAAlB,SACE,cAAC,EAAD,CAAU/C,QAfF,SAACkC,GACfc,QAAQC,IAAIf,GACZQ,EAAS,GAAD,mBAAKd,GAAL,CAAYM,YAgBlB,uBACA,cAACU,EAAA,EAAD,CAAKlB,UAAW,gCAAhB,SACE,cAACmB,EAAA,EAAD,CAAKC,KAAM,EAAGC,GAAI,EAAlB,SACE,cAAC,EAAD,CAAOnB,MAAOA,EAAOC,WAhBV,SAACpB,GAClB,IAAMyC,EAAetB,EAAMuB,QAAO,SAACjB,GAAD,OAAUA,EAAKzB,KAAOA,KACxDiC,EAASQ,cCJEE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.07fe2104.chunk.js","sourcesContent":["import \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return <h1>Todo List</h1>\r\n  \r\n};\r\n\r\nexport default Header;\r\n","import shortid from \"short-id\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst Taskform = ({ addTask }) => {\r\n  const handleAddTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    const [taskName, taskDescription] = e.target.elements;\r\n    addTask({\r\n      id: shortid.generate(),\r\n      name: taskName.value.trim(),\r\n      description: taskDescription.value.trim(),\r\n    });\r\n\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleAddTask}>\r\n      <h5>Set tasks</h5>\r\n      <Form.Group>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"taskName\"\r\n          placeholder=\"Â¿Whats you have to do?\"\r\n          required=\"required\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <h5>Description of the task</h5>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          name=\"taskDescription\"\r\n          required=\"required\"\r\n          rows={1}\r\n          placeholder=\"Write task\"\r\n        />\r\n      </Form.Group>\r\n      <Button type=\"submit\" variant={\"success\"} className={\"btn btn-block\"}>\r\n        Add Task\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Taskform;\r\n","import { Table } from \"react-bootstrap\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n// import Addtask from \"./Addtask\"\r\n\r\nconst Tasks = ({ tasks, deleteTask }) => {\r\n  const removeTask = (id) => {\r\n    deleteTask(id);\r\n  };\r\n\r\n  return (\r\n    <Table bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Task</th>\r\n          <th>Description</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tasks.map((task) => (\r\n          <tr key={task.id}>\r\n            <td>{task.name}</td>\r\n            <td>{task.description}</td>\r\n            <td onClick={() => removeTask(task.id)}>\r\n              <FaTimes\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                  color: \"#962d2d\",\r\n                  fontSize: \"18px\",\r\n                }}\r\n              />\r\n            </td>\r\n          </tr>\r\n         \r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import Header from \"./Components/Header\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport Taskform from \"./Components/Taskform\";\nimport Tasks from \"./Components/Tasks\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = (task) => {\n    console.log(task);\n    setTasks([...tasks, task]);\n  };\n\n  const deleteTask = (id) => {\n    const selectedTask = tasks.filter((task) => task.id !== id);\n    setTasks(selectedTask);\n  };\n\n  return (\n    <Container>\n      <Header />\n      <Row className={\"d-flex justify-content-center\"}>\n        <Col size={4} md={7}>\n          <Taskform addTask={addTask} />\n        </Col>\n      </Row>\n      <br />\n      <Row className={\"d-flex justify-content-center\"}>\n        <Col size={3} md={7}>\n          <Tasks tasks={tasks} deleteTask={deleteTask} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}